name: Security Scanning

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM

permissions:
  contents: read
  security-events: write

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'typescript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run npm audit
      run: npm audit --audit-level=moderate

    - name: Run Trivy vulnerability scanner on dependencies
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-deps-results.sarif'
        scanners: 'vuln'

    - name: Upload Trivy dependency scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-deps-results.sarif'
        category: 'trivy-dependencies'

  secrets-scan:
    name: Secret Detection
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run Trivy secret scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-secrets-results.sarif'
        scanners: 'secret'

    - name: Upload Trivy secret scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-secrets-results.sarif'
        category: 'trivy-secrets'

    - name: Run Trivy configuration scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-config-results.sarif'
        scanners: 'config'

    - name: Upload Trivy config scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-config-results.sarif'
        category: 'trivy-config'

  helm-security:
    name: Helm Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: v3.14.0

    - name: Install Checkov
      run: pip3 install checkov

    - name: Update Helm dependencies
      run: |
        cd helm/secretly
        helm dependency update
        cd ../..

    - name: Render Helm templates
      run: |
        mkdir -p rendered-templates
        helm template secretly helm/secretly \
          --set slack.botToken="dummy" \
          --set slack.appToken="dummy" \
          --set slack.signingSecret="dummy" \
          --set security.encryptionKey="dummy-key-32-characters-long" \
          --output-dir rendered-templates

    - name: Run Checkov on Helm templates
      run: |
        checkov -d rendered-templates \
          --framework kubernetes \
          --output sarif \
          --output-file-path checkov-results.sarif || true

    - name: Upload Checkov scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: checkov-results.sarif
        category: 'checkov-kubernetes'

  dockerfile-scan:
    name: Dockerfile Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Hadolint
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile
        format: sarif
        output-file: hadolint-results.sarif

    - name: Upload Hadolint scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: hadolint-results.sarif
        category: 'hadolint-dockerfile'